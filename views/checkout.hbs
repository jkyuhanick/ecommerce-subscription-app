<form id="payment-form" action="/checkout/submit" method="POST">
    <h1>Checkout</h1>

    <div class="form-group">
        <input type="text" name="fullName" value="{{user.firstName}} {{user.lastName}}" required placeholder=" ">
        <label for="fullName">Full Name</label>
    </div>

    <div class="form-group">
        <input type="text" name="address[street]" value="{{user.address.street}}" required placeholder=" ">
        <label for="address[street]">Street Address</label>
    </div>

    <div class="form-group">
        <input type="text" name="address[city]" value="{{user.address.city}}" required placeholder=" ">
        <label for="address[city]">City</label>
    </div>

    <div class="form-group">
        <input type="text" name="address[state]" value="{{user.address.state}}" required placeholder=" ">
        <label for="address[state]">State</label>
    </div>

    <div class="form-group">
        <input type="text" name="address[postalCode]" value="{{user.address.postalCode}}" required placeholder=" ">
        <label for="address[postalCode]">Zip Code</label>
    </div>

    <div class="form-group">
        <input type="text" name="address[country]" value="{{user.address.country}}" required placeholder=" ">
        <label for="address[country]">Country</label>
    </div>

    <div class="form-group">
        <div id="card-element">
        </div>
        <div id="card-errors" role="alert"></div>
    </div>

    <h3>Order Summary</h3>
    <ul>
        {{#each cart.items}}
            <li>{{this.productId.name}} - {{#if this.productId.subscription}}
            {{else}}
                {{#if this.variationId}}
                    {{#each this.productId.variations}}
                        {{#if (stringEq this._id ../this.variationId)}}
                            {{this.shade}} -
                        {{/if}}
                    {{/each}}
                    {{else}}
                    {{this.productId.price}}
                {{/if}}
            {{/if}} ${{#if this.variationId}}{{#each this.productId.variations}}{{#if (stringEq this._id ../this.variationId)}}{{this.price}}
                    {{/if}}
                {{/each}}
                {{else}}
                {{this.productId.price}}
            {{/if}} x {{this.quantity}}</li>
        {{/each}}
    </ul>
    <p><strong>Total:</strong> ${{twoDec total}}</p>
    <button type="submit">Place Order</button>
</form>


<script src="https://js.stripe.com/v3/"></script>

<script>
    var stripe = Stripe('pk_test_51QxxIr4GSemRY9pTCugrJTHnQRv7rwCRoTxcyNUBGrfx0tOmw7e1OEWJMJoUOlGjqGAK2nPvkGAHnGm4xuos46ye00wWKEVY8u');
    var elements = stripe.elements();

    // Custom styles for the card element
    var cardStyle = {
        base: {
            color: '#32325d',  
            fontFamily: 'Arial, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
                color: '#aab7c4', 
            },
        },
        invalid: {
            color: '#fa755a',  // Invalid field text color
            iconColor: '#fa755a',  // Invalid icon color
        },
    };

    // Create a card element with custom styles
    var card = elements.create('card', { style: cardStyle });
    card.mount('#card-element');

    var form = document.getElementById('payment-form');
    form.addEventListener('submit', async function(event) {
        event.preventDefault();

        const {token, error} = await stripe.createToken(card);
        if (error) {
            document.getElementById('card-errors').textContent = error.message;
        } else {
            // Add the token to the form before submitting it
            var paymentMethodIdInput = document.createElement('input');
            paymentMethodIdInput.setAttribute('type', 'hidden');
            paymentMethodIdInput.setAttribute('name', 'paymentMethodId');
            paymentMethodIdInput.setAttribute('value', token.id);
            form.appendChild(paymentMethodIdInput);

            form.submit();  // submit the form
        }
    });

    // AJAX form handling 
    $(document).ready(function () {
        $('#checkout-form').submit(function (event) {
            event.preventDefault(); 

            $.ajax({
                url: '/login',
                method: 'POST',
                data: $(this).serialize(),
                success: function (data) {
                    if (data.redirect) {
                        window.location.href = data.redirect; // Redirect to stored page
                    } else {
                        window.location.href = '/'; // Default fallback
                    }
                },
                error: function (err) {
                    console.error('Login failed:', err);
                    alert('Invalid email or password.');
                }
            });
        });
    });
</script>


<style>
    #card-element {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: #f9f9f9;
    }

    #card-element input {
        font-size: 16px;
        height: 40px;
    }

    #card-errors {
        color: #fa755a; 
        font-size: 14px;
    }

</style>
